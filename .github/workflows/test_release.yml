name: Test Release

on:
  pull_request:
    types: [ opened, reopened, labeled ]

jobs:
  test_release:
    if:  "${{ contains(github.event.pull_request.labels.*.name, 'ci: test release') }}"
    name: Test Release Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build:
          [
            linux-x64-gnu,
            linux-x64-musl,
            linux-arm64-gnu,
            linux-arm64-musl,
            linux-ia32-gnu,
            darwin-arm64,
            darwin-x64,
            win32-x64-msvc,
            win32-x64-gnu,
            win32-arm64-msvc,
            win32-ia32-gnu,
          ]
        include:
          - build: linux-x64-gnu
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
            libc: glibc
            cross: false

          - build: linux-x64-musl
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-musl
            libc: musl
            cross: true

          - build: linux-arm64-gnu
            os: ubuntu-latest
            rust: stable
            target: aarch64-unknown-linux-gnu
            libc: glibc
            cross: true

          - build: linux-arm64-musl
            os: ubuntu-latest
            rust: stable
            target: aarch64-unknown-linux-musl
            libc: musl
            cross: true

          - build: linux-ia32-gnu
            os: ubuntu-latest
            rust: stable
            target: i686-unknown-linux-gnu
            libc: glibc
            cross: true

          - build: darwin-arm64
            os: macos-latest
            rust: stable
            target: aarch64-apple-darwin

          - build: darwin-x64
            os: macos-latest
            rust: stable
            target: x86_64-apple-darwin
            cross: false

          - build: win32-x64-msvc
            os: windows-latest
            rust: stable
            target: x86_64-pc-windows-msvc
            libc: msvc
            ext: ".exe"

          - build: win32-x64-gnu
            os: windows-latest
            rust: stable
            target: x86_64-pc-windows-gnu
            libc: glibc
            ext: ".exe"

          - build: win32-arm64-msvc
            os: windows-latest
            rust: stable
            target: aarch64-pc-windows-msvc
            libc: msvc
            ext: ".exe"

          - build: win32-ia32-gnu
            os: ubuntu-latest
            rust: stable
            target: i686-pc-windows-gnu
            cross: true
            libc: glibc
            ext: ".exe"
    permissions:
      contents: write
      pull-requests: write
    env:
      GITHUB_TOKEN: ${{secrets.GITHUBTOKEN}}

    steps:
      - name: Checkout Current Branch (Fast)
        uses: actions/checkout@v4

      - name: Install Correct Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}

      - name: Build
        uses: ClementTsang/cargo-action@v0.0.6
        with:
          use-cross: ${{ matrix.cross }}
          command: build
          args: ${{matrix.features}} --release --target ${{ matrix.target }}